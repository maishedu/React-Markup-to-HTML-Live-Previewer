{"ast":null,"code":"var _jsxFileName = \"/Users/maishedu/Desktop/React Challenge/src/components/toolbar/toolbar.js\";\nimport React from 'react';\nimport './toolbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Toolbar(_ref) {\n  let {\n    onFormat\n  } = _ref;\n  const onInsertImageButtonClick = () => {\n    const fileInput = document.createElement(\"input\");\n    fileInput.setAttribute(\"type\", \"file\");\n    fileInput.setAttribute(\"accept\", \"image/*\");\n    fileInput.addEventListener(\"change\", event => {\n      if (event.target.files && event.target.files[0]) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          const imageUrl = e.target.result;\n          onFormat(imageUrl, \"image\");\n        };\n        reader.readAsDataURL(event.target.files[0]);\n      }\n    });\n    fileInput.click();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onFormat(\"**\", \"bold\"),\n      children: \"B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onFormat(\"_\", \"italic\"),\n      children: \"I\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onFormat(\"<h1>\", \"heading\"),\n      children: \"H\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInsertImageButtonClick,\n      children: \"Insert Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_c = Toolbar;\nexport default Toolbar;\nvar _c;\n$RefreshReg$(_c, \"Toolbar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Toolbar","_ref","onFormat","onInsertImageButtonClick","fileInput","document","createElement","setAttribute","addEventListener","event","target","files","reader","FileReader","onload","e","imageUrl","result","readAsDataURL","click","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maishedu/Desktop/React Challenge/src/components/toolbar/toolbar.js"],"sourcesContent":["import React from 'react';\nimport './toolbar.css';\n\nfunction Toolbar({onFormat}) {\n    const onInsertImageButtonClick = () => {\n        const fileInput = document.createElement(\"input\");\n        fileInput.setAttribute(\"type\", \"file\");\n        fileInput.setAttribute(\"accept\", \"image/*\");\n\n        fileInput.addEventListener(\"change\", (event) => {\n            if (event.target.files && event.target.files[0]) {\n                const reader = new FileReader();\n\n                reader.onload = (e) => {\n                    const imageUrl = e.target.result;\n                    onFormat(imageUrl,\"image\");\n                };\n\n                reader.readAsDataURL(event.target.files[0]);\n            }\n        });\n\n        fileInput.click();\n    };\n    return (\n        <div className=\"toolbar\">\n            <button onClick={() => onFormat(\"**\", \"bold\")}>B</button>\n            <button onClick={() => onFormat(\"_\", \"italic\")}>I</button>\n            <button onClick={() => onFormat(\"<h1>\", \"heading\")}>H</button>\n            <button onClick={onInsertImageButtonClick}>Insert Image</button>\n        </div>\n    );\n}\n\nexport default Toolbar;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAAC,IAAA,EAAa;EAAA,IAAZ;IAACC;EAAQ,CAAC,GAAAD,IAAA;EACvB,MAAME,wBAAwB,GAAGA,CAAA,KAAM;IACnC,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;IACjDF,SAAS,CAACG,YAAY,CAAC,MAAM,EAAE,MAAM,CAAC;IACtCH,SAAS,CAACG,YAAY,CAAC,QAAQ,EAAE,SAAS,CAAC;IAE3CH,SAAS,CAACI,gBAAgB,CAAC,QAAQ,EAAGC,KAAK,IAAK;MAC5C,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;QAC7C,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAE/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAK;UACnB,MAAMC,QAAQ,GAAGD,CAAC,CAACL,MAAM,CAACO,MAAM;UAChCf,QAAQ,CAACc,QAAQ,EAAC,OAAO,CAAC;QAC9B,CAAC;QAEDJ,MAAM,CAACM,aAAa,CAACT,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MAC/C;IACJ,CAAC,CAAC;IAEFP,SAAS,CAACe,KAAK,CAAC,CAAC;EACrB,CAAC;EACD,oBACIpB,OAAA;IAAKqB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBtB,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAE;MAAAmB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACzD3B,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,GAAG,EAAE,QAAQ,CAAE;MAAAmB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC1D3B,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,MAAM,EAAE,SAAS,CAAE;MAAAmB,QAAA,EAAC;IAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9D3B,OAAA;MAAQuB,OAAO,EAAEnB,wBAAyB;MAAAkB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEd;AAACC,EAAA,GA7BQ3B,OAAO;AA+BhB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}