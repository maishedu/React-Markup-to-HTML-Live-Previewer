{"ast":null,"code":"var _jsxFileName = \"/Users/maishedu/Desktop/React Challenge/src/components/blogeditor/blogeditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './blogeditor.css';\nimport { marked } from \"marked\";\nimport * as DOMPurify from 'dompurify';\nimport Toolbar from \"../toolbar/toolbar\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blogeditor(props) {\n  _s();\n  //state management\n  const [input, setInput] = useState(\"\");\n  const [preview, setPreview] = useState(\"\");\n  const [theme, setTheme] = useState('light');\n\n  //load draft if it exists\n  useEffect(() => {\n    const draft = localStorage.getItem(\"draft\");\n    if (draft) {\n      setInput(draft);\n      setPreview(DOMPurify.sanitize(marked(draft)));\n    }\n  }, []);\n\n  //On typing save content to the state\n  const handleChange = event => {\n    setInput(event.target.value);\n    //preview state sanitize and convert markup to HTML\n    setPreview(DOMPurify.sanitize(marked(event.target.value)));\n  };\n  //format texts\n  const handleFormat = (syntax, type) => {\n    //select  start position of the highlighted text\n    const selectionStart = document.querySelector(\".markdown-input\").selectionStart;\n    //select end position of the highlighted text\n    const selectionEnd = document.querySelector(\".markdown-input\").selectionEnd;\n    //get full highlighted text\n    const selectedText = input.substring(selectionStart, selectionEnd);\n    let newText = \"\";\n    //Transform the input text by including the formatting to the highlighted texts\n    if (type == \"heading\") {\n      newText = input.substring(0, selectionStart) + syntax + \" \" + selectedText + \"\\n\" + input.substring(selectionEnd);\n    }\n    if (type === \"image\") {\n      const imageSyntax = `![alt text](${syntax})`;\n      newText = input.substring(0, selectionStart) + marked(imageSyntax) + input.substring(selectionEnd);\n    } else {\n      newText = input.substring(0, selectionStart) + syntax + selectedText + syntax + input.substring(selectionEnd);\n    }\n    setInput(newText);\n    setPreview(DOMPurify.sanitize(marked(newText)));\n  };\n  //save draft to local storage\n  const saveDraft = () => {\n    localStorage.setItem(\"draft\", input);\n    Swal.fire({\n      icon: 'success',\n      title: 'Successful',\n      text: 'Draft Saved Successfully'\n    });\n  };\n  //publish and clear text area\n  const publishBlog = () => {\n    localStorage.setItem(\"blog\", input);\n    localStorage.removeItem(\"draft\");\n    Swal.fire({\n      icon: 'success',\n      title: 'Successful',\n      text: 'Blog Published Successfully'\n    });\n    setInput(\"\");\n    setPreview(\"\");\n  };\n  //switch bettween light and dark theme\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `section__blogeditor ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-editor\",\n      children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n        onFormat: handleFormat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"markdown-input\",\n        value: input,\n        rows: \"50\",\n        cols: \"70\",\n        onChange: handleChange,\n        placeholder: \"Write your blog post in Markdown format here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => saveDraft(),\n          children: \"Save Draft\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => publishBlog(),\n          children: \"Publish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: preview\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(Blogeditor, \"6acs7LdePHf6mbfx5m3wEgPIIvs=\");\n_c = Blogeditor;\nexport default Blogeditor;\nvar _c;\n$RefreshReg$(_c, \"Blogeditor\");","map":{"version":3,"names":["React","useState","useEffect","marked","DOMPurify","Toolbar","Swal","jsxDEV","_jsxDEV","Blogeditor","props","_s","input","setInput","preview","setPreview","theme","setTheme","draft","localStorage","getItem","sanitize","handleChange","event","target","value","handleFormat","syntax","type","selectionStart","document","querySelector","selectionEnd","selectedText","substring","newText","imageSyntax","saveDraft","setItem","fire","icon","title","text","publishBlog","removeItem","toggleTheme","className","children","onFormat","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","onChange","placeholder","onClick","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/maishedu/Desktop/React Challenge/src/components/blogeditor/blogeditor.js"],"sourcesContent":["import React,{useState,useEffect} from 'react';\nimport './blogeditor.css';\nimport {marked} from \"marked\";\nimport  * as DOMPurify from 'dompurify';\nimport Toolbar from \"../toolbar/toolbar\";\nimport Swal from \"sweetalert2\";\n\n\n\nfunction Blogeditor(props) {\n    //state management\n    const [input, setInput] = useState(\"\");\n    const [preview, setPreview] = useState(\"\");\n    const [theme, setTheme] = useState('light');\n\n//load draft if it exists\n    useEffect(()=>{\n        const draft = localStorage.getItem(\"draft\");\n        if(draft){\n            setInput(draft);\n            setPreview(DOMPurify.sanitize(marked(draft)));\n        }\n    },[])\n\n//On typing save content to the state\n    const handleChange = (event)=>{\n        setInput(event.target.value);\n        //preview state sanitize and convert markup to HTML\n        setPreview(DOMPurify.sanitize(marked(event.target.value)));\n    }\n    //format texts\n    const handleFormat = (syntax,type)=>{\n        //select  start position of the highlighted text\n        const selectionStart = document.querySelector(\".markdown-input\").selectionStart;\n        //select end position of the highlighted text\n        const selectionEnd = document.querySelector(\".markdown-input\").selectionEnd;\n        //get full highlighted text\n        const selectedText = input.substring(selectionStart, selectionEnd);\n\n        let newText = \"\";\n//Transform the input text by including the formatting to the highlighted texts\n        if (type == \"heading\") {\n            newText = input.substring(0, selectionStart) + syntax + \" \" + selectedText + \"\\n\" + input.substring(selectionEnd);\n        }if(type === \"image\"){\n            const imageSyntax = `![alt text](${syntax})`;\n            newText = input.substring(0, selectionStart) + marked(imageSyntax) + input.substring(selectionEnd);\n        } else {\n            newText = input.substring(0, selectionStart) + syntax + selectedText + syntax + input.substring(selectionEnd);\n        }\n        setInput(newText);\n        setPreview(DOMPurify.sanitize(marked(newText)));\n\n    }\n    //save draft to local storage\n    const saveDraft = ()=>{\n        localStorage.setItem(\"draft\",input);\n        Swal.fire({\n            icon: 'success',\n            title: 'Successful',\n            text: 'Draft Saved Successfully'\n        })\n    }\n    //publish and clear text area\n    const publishBlog = ()=>{\n         localStorage.setItem(\"blog\",input);\n         localStorage.removeItem(\"draft\");\n        Swal.fire({\n            icon: 'success',\n            title: 'Successful',\n            text: 'Blog Published Successfully'\n        })\n         setInput(\"\");\n         setPreview(\"\");\n    }\n    //switch bettween light and dark theme\n    const toggleTheme = () => {\n        setTheme(theme === 'light' ? 'dark' : 'light');\n    };\n\n    return (\n        <div className={`section__blogeditor ${theme}`}>\n            <div className=\"blog-editor\">\n                <Toolbar  onFormat={handleFormat}/>\n                    <textarea\n                        className=\"markdown-input\"\n                        value={input}\n                        rows=\"50\" cols=\"70\"\n                        onChange={handleChange}\n                        placeholder=\"Write your blog post in Markdown format here...\"\n                    />\n                <div className=\"buttons\">\n                    <button onClick={()=>saveDraft()}>Save Draft</button>\n                    <button onClick={()=>publishBlog()}>Publish</button>\n                </div>\n            </div>\n            <div className=\"preview\">\n                <div\n                    dangerouslySetInnerHTML={{__html: preview}}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Blogeditor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}