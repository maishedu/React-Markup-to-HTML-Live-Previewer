{"ast":null,"code":"var _jsxFileName = \"/Users/maishedu/Desktop/React Challenge/src/components/blogeditor/blogeditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './blogeditor.css';\nimport { marked } from \"marked\";\nimport * as DOMPurify from 'dompurify';\nimport Toolbar from \"../toolbar/toolbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Blogeditor(props) {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [preview, setPreview] = useState(\"\");\n  const handleChange = event => {\n    setInput(event.target.value);\n    setPreview(DOMPurify.sanitize(marked(event.target.value)));\n  };\n  const handleFormat = (syntax, type) => {\n    const selectionStart = document.querySelector(\".markdown-input\").selectionStart;\n    const selectionEnd = document.querySelector(\".markdown-input\").selectionEnd;\n    const selectedText = input.substring(selectionStart, selectionEnd);\n    let newText = \"\";\n    if (type == \"heading\") {\n      newText = input.substring(0, selectionStart) + syntax + \" \" + selectedText + \"\\n\" + input.substring(selectionEnd);\n    }\n    if (type === \"image\") {\n      const imageSyntax = `![alt text](${syntax})`;\n      newText = input.substring(0, selectionStart) + marked(imageSyntax) + input.substring(selectionEnd);\n    } else {\n      newText = input.substring(0, selectionStart) + syntax + selectedText + syntax + input.substring(selectionEnd);\n    }\n    setInput(newText);\n    if (newText) {\n      setPreview(marked(newText));\n    } else {\n      setPreview(''); // Clear the preview if the input is empty\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section__blogeditor\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blog-editor\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"markdown-input\",\n        contentEditable: \"true\",\n        onInput: handleChange,\n        placeholder: \"Write your blog post in Markdown format here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: preview\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n_s(Blogeditor, \"pr5tZOU012NU9hLeIFpkFtCwIz0=\");\n_c = Blogeditor;\nexport default Blogeditor;\nvar _c;\n$RefreshReg$(_c, \"Blogeditor\");","map":{"version":3,"names":["React","useState","marked","DOMPurify","Toolbar","jsxDEV","_jsxDEV","Blogeditor","props","_s","input","setInput","preview","setPreview","handleChange","event","target","value","sanitize","handleFormat","syntax","type","selectionStart","document","querySelector","selectionEnd","selectedText","substring","newText","imageSyntax","className","children","contentEditable","onInput","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["/Users/maishedu/Desktop/React Challenge/src/components/blogeditor/blogeditor.js"],"sourcesContent":["import React,{useState} from 'react';\nimport './blogeditor.css';\nimport {marked} from \"marked\";\nimport  * as DOMPurify from 'dompurify';\nimport Toolbar from \"../toolbar/toolbar\";\n\n\n\nfunction Blogeditor(props) {\n    const [input, setInput] = useState(\"\");\n    const [preview, setPreview] = useState(\"\");\n\n\n    const handleChange = (event)=>{\n        setInput(event.target.value);\n        setPreview(DOMPurify.sanitize(marked(event.target.value)));\n    }\n    const handleFormat = (syntax,type)=>{\n        const selectionStart = document.querySelector(\".markdown-input\").selectionStart;\n        const selectionEnd = document.querySelector(\".markdown-input\").selectionEnd;\n        const selectedText = input.substring(selectionStart, selectionEnd);\n\n        let newText = \"\";\n\n        if (type == \"heading\") {\n            newText = input.substring(0, selectionStart) + syntax + \" \" + selectedText + \"\\n\" + input.substring(selectionEnd);\n        }if(type === \"image\"){\n            const imageSyntax = `![alt text](${syntax})`;\n            newText = input.substring(0, selectionStart) + marked(imageSyntax) + input.substring(selectionEnd);\n        } else {\n            newText = input.substring(0, selectionStart) + syntax + selectedText + syntax + input.substring(selectionEnd);\n        }\n\n        setInput(newText);\n\n        if (newText) {\n            setPreview(marked(newText));\n        } else {\n            setPreview(''); // Clear the preview if the input is empty\n        }\n    }\n    return (\n        <div className=\"section__blogeditor\">\n            <div className=\"blog-editor\">\n                <div\n                    className=\"markdown-input\"\n                    contentEditable=\"true\"\n                    onInput={handleChange}\n                    placeholder=\"Write your blog post in Markdown format here...\"\n                />\n\n            </div>\n            <div className=\"preview\">\n                <div\n                    dangerouslySetInnerHTML={{__html: preview}}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default Blogeditor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}